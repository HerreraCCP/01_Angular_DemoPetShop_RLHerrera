{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let MaskDirective = /*#__PURE__*/(() => {\n  class MaskDirective {\n    constructor(element) {\n      this.element = element;\n    }\n\n    onInputChange(event) {\n      if (event.inputType == 'deleteContentBackward') return;\n      const initalValue = this.element.nativeElement.value;\n      initalValue.replace(/[^0-9]*/g, '');\n      if (initalValue !== this.element.nativeElement.value) event.stopPropagation();\n      this.element.nativeElement.value = this.format(this.mask, initalValue);\n    }\n\n    format(mask, value) {\n      let text = '';\n      let data = value;\n      let c, m, i, x;\n\n      for (i = 0, x = 1; x && i < mask.length; ++i) {\n        c = data.charAt(i);\n        m = mask.charAt(i);\n\n        switch (mask.charAt(i)) {\n          case '#':\n            if (/\\d/.test(c)) {\n              text += c;\n            } else {\n              x = 0;\n            }\n\n            break;\n\n          case 'A':\n            if (/[a-z]/i.test(c)) {\n              text += c;\n            } else {\n              x = 0;\n            }\n\n            break;\n\n          case 'N':\n            if (/[a-z0-9]/i.test(c)) {\n              text += c;\n            } else {\n              x = 0;\n            }\n\n            break;\n\n          case 'X':\n            text += c;\n            break;\n\n          default:\n            text += m;\n            break;\n        }\n      }\n\n      return text;\n    }\n\n  }\n\n  MaskDirective.ɵfac = function MaskDirective_Factory(t) {\n    return new (t || MaskDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  MaskDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: MaskDirective,\n    selectors: [[\"\", \"mask\", \"\"]],\n    hostBindings: function MaskDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function MaskDirective_input_HostBindingHandler($event) {\n          return ctx.onInputChange($event);\n        });\n      }\n    },\n    inputs: {\n      mask: \"mask\"\n    }\n  });\n  return MaskDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}